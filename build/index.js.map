{"version":3,"file":"index.js","sources":["../source/index.ts"],"sourcesContent":["import { regex as period } from 'vamtiger-regex-period';\nimport { ReferenceObjectPath } from 'vamtiger-reference-object-path';\n\nconst referenceObjectPath = require('vamtiger-reference-object-path') as ReferenceObjectPath;\n\nconst periodCharacter = '.';\n\nexport default function main({ path: requirePath, constructorParams, arguments: args, instanceArguments: instanceArgs, instanceAttribute, instanceMethod, instancePath }: Params) {\n    const [filePath, ...objectPaths] = requirePath.split(period);\n    const objectPath = objectPaths && objectPaths.join(periodCharacter);\n    const requiredModule = require(filePath);\n    const method = objectPath && referenceObjectPath({\n        object: requiredModule,\n        path: objectPath\n    });\n\n    let result = method || requiredModule;\n    let resultFunction;\n\n    instanceMethod = instanceMethod || instancePath;\n\n    if (constructorParams) {\n        result = new result(constructorParams);\n\n        if (instanceMethod) {\n            resultFunction = referenceObjectPath({\n                object: result,\n                path: instanceMethod\n            });\n\n            result = resultFunction.apply(result, instanceArgs || []);\n        } else if (instanceAttribute)\n            result = result[instanceAttribute];\n    } else if (args && typeof args[args.length - 1] === Type.function)\n        result = result.apply(null, args);\n    else if (args)\n        result = result(args);\n\n    return result;\n}\n\nexport interface Params {\n    path: string;\n    constructorParams?: AnyObject;\n    instanceAttribute?: string;\n    instanceMethod?: string;\n    instancePath?: string; // alias for instanceMethod\n    arguments?: any[];\n    instanceArguments?: any[];\n}\n\nexport enum Type {\n    function = 'function'\n}\n\nexport type AnyObject = {\n    [key: string]: any;\n}\n\nexport type VamtigerRequire = typeof main;"],"names":["referenceObjectPath","require","periodCharacter","main","path","requirePath","constructorParams","arguments","args","instanceArguments","instanceArgs","instanceAttribute","instanceMethod","instancePath","filePath","objectPaths","split","period","objectPath","join","requiredModule","resultFunction","result","object","apply","length","Type","function"],"mappings":"6HAGA,MAAMA,oBAAsBC,QAAQ,kCAE9BC,gBAAkB,IAExB,SAAwBC,MAAOC,KAAMC,EAAWC,kBAAEA,EAAmBC,UAAWC,EAAMC,kBAAmBC,EAAYC,kBAAEA,EAAiBC,eAAEA,EAAcC,aAAEA,IACtJ,MAAOC,KAAaC,GAAeV,EAAYW,MAAMC,2BAC/CC,EAAaH,GAAeA,EAAYI,KAAKjB,iBAC7CkB,EAAiBnB,QAAQa,GAM/B,IACIO,EADAC,EALWJ,GAAclB,qBACzBuB,OAAQH,EACRhB,KAAMc,KAGaE,EAsBvB,OAnBAR,EAAiBA,GAAkBC,EAE/BP,GACAgB,EAAS,IAAIA,EAAOhB,GAEhBM,EAMAU,GALAD,EAAiBrB,qBACbuB,OAAQD,EACRlB,KAAMQ,KAGcY,MAAMF,EAAQZ,OAC/BC,IACPW,EAASA,EAAOX,KACbH,UAAeA,EAAKA,EAAKiB,OAAS,KAAOC,aAAKC,SACrDL,EAASA,EAAOE,MAAM,KAAMhB,GACvBA,IACLc,EAASA,EAAOd,IAEbc,GAaCI,eAAAA"}